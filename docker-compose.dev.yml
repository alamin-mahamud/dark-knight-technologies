version: '3.8'

services:
  # PostgreSQL Database (same as production)
  postgres:
    image: postgres:15-alpine
    container_name: dark-knight-postgres-dev
    environment:
      POSTGRES_DB: dark_knight_technologies
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dark-knight-dev-network

  # Backend Development with live reload
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dark-knight-backend-dev
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/dark_knight_technologies
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - dark-knight-dev-network
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Development with live reload
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dark-knight-frontend-dev
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
    ports:
      - "3000:3000"
    networks:
      - dark-knight-dev-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local

networks:
  dark-knight-dev-network:
    driver: bridge